#include <bits/stdc++.h>
using namespace std;

bool isPossible(int mid, int k, vector<int> &stalls)
{
    int cnt = 1;
    int i = 0, j = 1;
    while (i < stalls.size() && j < stalls.size())
    {
        if (stalls[j] - stalls[i] >= mid)
        {
            cout << "i :- " << i << " j :- " << j << endl;
            cnt++;
            i = j;
            j = i + 1;
        }
        else
            j++;
    }
    cout << "cnt " << cnt << endl;
    if (cnt >= k)
        return true;
    return false;
}
int aggressiveCows(vector<int> &stalls, int k)
{
    sort(stalls.begin(), stalls.end());
    int min = stalls.front();
    int max = stalls.back();
    cout << "min " << min << " max " << max << endl;
    int l = 0;
    int r = max - min;
    int ans = 0;
    while (l <= r)
    {
        int mid = (l + r) / 2;
        if (isPossible(mid, k, stalls))
        {
            ans = mid;
            l = mid + 1;
        }
        else
            r = mid - 1;
    }
    return ans;
}
int main()
{
    vector<int> stalls{1, 2, 3, 4, 7}; //{5, 4, 3, 2, 1, 1000000000};{1, 2, 4, 8, 9};
    int k = 3;
    cout << aggressiveCows(stalls, k);
}
